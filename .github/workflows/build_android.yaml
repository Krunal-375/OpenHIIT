name: Build Flutter App

run-name: ${{ github.actor }} is building the Android app bundle ðŸš€

on: push

# on:
#   pull_request:
#     types:
#       - opened
#       - reopened
#       - synchronize
#       - ready_for_review
#     branches:
#       - 'main'
#     paths-ignore:
#       - '**.md'
#       - 'doc/**'
#       - '.git/'
#       - '.vscode/'

jobs:
  BuildAndroidRelease:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3

      # Set up Flutter.
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: flutter doctor -v

      # Checkout the repository code and get packages.
      - name: Checkout app code
        uses: actions/checkout@v3
      - run: flutter pub get

      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: upload-keystore.jks
          encodedString: ${{ secrets.KEYSTORE_FILE_BASE64 }}

      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEYSTORE_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEYSTORE_KEY_ALIAS }}" >> android/key.properties

      - name: Build Android Release APK
        run: flutter build apk --release

      - name: Build Android Release AppBundle
        run: flutter build appbundle

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk

      - name: Upload Android AppBundle Artifact
        uses: actions/upload-artifact@v2
        with:
          name: release-aab
          path: build/app/outputs/bundle/release/app-release.aab

      - name: Create Release
        uses: ncipollo/release-action@v1.13.0
        with:
          artifacts: "build/app/outputs/apk/release/*.apk, build/app/outputs/bundle/release/*.aab"
          draft: "true"
          tag: "1.0.0"

  PublishAndroidRelease:
    runs-on: ubuntu-latest
    environment: production
    needs: BuildAndroidRelease
      steps:
        - name: Test
          run: echo "HI"